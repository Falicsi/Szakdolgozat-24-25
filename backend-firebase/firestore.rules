// firestore.rules
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Általános: csak bejelentkezett felhasználók olvashatnak
    match /{collection}/{docId} {
      allow read:   if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null;
      allow delete: if false;               // törléshez külön jogosultság
    }

    // users kollekció: saját dokumentum módosítása
    match /users/{userId} {
      allow read:   if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth.uid == userId;
      allow delete: if false;
    }

    // roles: bárki olvashatja, csak admin írhatja
    match /roles/{roleId} {
      allow read:   if request.auth != null;
      allow create: if request.auth.token.admin == true;
      allow update: if request.auth.token.admin == true;
      allow delete: if request.auth.token.admin == true;
    }

    // categories, resources, events: admin írhatja
    match /categories/{catId} {
      allow read:   if request.auth != null;
      allow create: if request.auth.token.admin == true;
      allow update: if request.auth.token.admin == true;
      allow delete: if request.auth.token.admin == true;
    }

    match /resources/{resId} {
      allow read:   if request.auth != null;
      allow create: if request.auth.token.admin == true;
      allow update: if request.auth.token.admin == true;
      allow delete: if request.auth.token.admin == true;
    }

    match /events/{eventId} {
      allow read:   if request.auth != null;
      allow create: if request.auth.token.admin == true;
      allow update: if request.auth.token.admin == true;
      allow delete: if request.auth.token.admin == true;
    }

    // invitations: a felhasználó csak a saját meghívóit láthatja és módosíthatja
    match /invitations/{invId} {
      allow read:   if request.auth.uid == resource.data.userId;
      allow create: if request.auth != null;
      allow update: if request.auth.uid == resource.data.userId;
      allow delete: if request.auth.token.admin == true;
    }
  }
}
